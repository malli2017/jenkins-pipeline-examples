pipeline {
    agent {
        label 'android'
    }

    environment {
        ANDROID_HOME = '/opt/android-sdk'
    }

    stages {
        stage('Checkout') {
            steps {
                notifyBuild()
                
                git url: 'git@github.com:membrive/example-app',
                    branch: 'master'
            }
        }

        stage('Test') {
            steps {
                sh 'chmod +x gradlew'

                // report junit results whether tests pass or fail
                script {
                    try {
                        sh './gradlew clean test --continue'
                    } catch(err) {
                        throw err
                    } finally {
                        junit 'app/build/test-results/debug/TEST-*.xml'
                    }
                }
            }
        }

        stage('Build') {
            steps {
                sh './gradlew clean assemble'
            }
        }
    }

    post {
        aborted {
            notifyBuild('ABORTED')
        }

        success {
            archive 'app/build/outputs/apk/*.apk'
            notifyBuild('SUCCESSFUL')
        }

        unstable {
            notifyBuild('UNSTABLE')
        }

        failure {
            notifyBuild('FAILURE')
        }
    }
}

def notifyBuild(String buildStatus = 'STARTED') {
    buildStatus =  buildStatus ?: 'SUCCESSFUL'

    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"
    def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""

    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESSFUL') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }

    slackSend (color: colorCode, message: summary)
}
